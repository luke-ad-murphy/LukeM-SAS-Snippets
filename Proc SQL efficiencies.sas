libname RuAnly meta library = "RuAnly" metaout = data; 

PROC SQL to see the SAS query plan use PROC SQL  _TREE  _METHOD; 
and the big tuneable here is BUFFERSIZE so PROC SQL BUFFERSIZE=1000000; 
will assume that 1 million rows can be held in memory and so can help the query plan improve – 
see this paper for a good discussion on this http://www2.sas.com/proceedings/sugi30/101-30.pdf
;



Proc SQL;
Create table test as
select 	billing_account_number
		,((total_ul_volume)+(total_dl_volume)) AS MBs
		,((TOTAL_DATAUSE_HOUR_6)+(TOTAL_DATAUSE_HOUR_7)+(TOTAL_DATAUSE_HOUR_8)+(TOTAL_DATAUSE_HOUR_9)) AS mrh_MB
		,((TOTAL_DATAUSE_HOUR_10)+(TOTAL_DATAUSE_HOUR_11)+(TOTAL_DATAUSE_HOUR_12)+(TOTAL_DATAUSE_HOUR_13)+(TOTAL_DATAUSE_HOUR_14)+(TOTAL_DATAUSE_HOUR_15)) AS day_MB
		,((TOTAL_DATAUSE_HOUR_16)+(TOTAL_DATAUSE_HOUR_17)+(TOTAL_DATAUSE_HOUR_18)) AS erh_MB
		,((TOTAL_DATAUSE_HOUR_19)+(TOTAL_DATAUSE_HOUR_20)+(TOTAL_DATAUSE_HOUR_21)+(TOTAL_DATAUSE_HOUR_22)+(TOTAL_DATAUSE_HOUR_23)+(TOTAL_DATAUSE_HOUR_0)) AS eve_MB
		,((TOTAL_DATAUSE_HOUR_1)+(TOTAL_DATAUSE_HOUR_2)+(TOTAL_DATAUSE_HOUR_3)+(TOTAL_DATAUSE_HOUR_4)+(TOTAL_DATAUSE_HOUR_5)) AS nt_MB
		,((TOTAL_DATAUSE_HOUR_0_WKND)+(TOTAL_DATAUSE_HOUR_1_WKND)+(TOTAL_DATAUSE_HOUR_2_WKND)+(TOTAL_DATAUSE_HOUR_3_WKND)+(TOTAL_DATAUSE_HOUR_4_WKND)+(TOTAL_DATAUSE_HOUR_5_WKND)+(TOTAL_DATAUSE_HOUR_6_WKND)+(TOTAL_DATAUSE_HOUR_7_WKND)+(TOTAL_DATAUSE_HOUR_8_WKND)+(TOTAL_DATAUSE_HOUR_9_WKND)+(TOTAL_DATAUSE_HOUR_10_WKND)+(TOTAL_DATAUSE_HOUR_11_WKND)+(TOTAL_DATAUSE_HOUR_12_WKND)+(TOTAL_DATAUSE_HOUR_13_WKND)+(TOTAL_DATAUSE_HOUR_14_WKND)+(TOTAL_DATAUSE_HOUR_15_WKND)+(TOTAL_DATAUSE_HOUR_16_WKND)+(TOTAL_DATAUSE_HOUR_17_WKND)+(TOTAL_DATAUSE_HOUR_18_WKND)+(TOTAL_DATAUSE_HOUR_19_WKND)+(TOTAL_DATAUSE_HOUR_20_WKND)+(TOTAL_DATAUSE_HOUR_21_WKND)+(TOTAL_DATAUSE_HOUR_22_WKND)+(TOTAL_DATAUSE_HOUR_23_WKND)) as weekend_use
from 	RuAnly.NETWORK_DATA_USAGE_MBB		
where 	charge_year_month = 201510;
Quit;
/*NOTE: PROCEDURE SQL used (Total process time):*/
/*      real time           9:04.67*/
/*      cpu time            3:28.84*/


Proc SQL _method _tree;
Create table test as
select 	billing_account_number
		,((total_ul_volume)+(total_dl_volume)) AS MBs
		,((TOTAL_DATAUSE_HOUR_6)+(TOTAL_DATAUSE_HOUR_7)+(TOTAL_DATAUSE_HOUR_8)+(TOTAL_DATAUSE_HOUR_9)) AS mrh_MB
		,((TOTAL_DATAUSE_HOUR_10)+(TOTAL_DATAUSE_HOUR_11)+(TOTAL_DATAUSE_HOUR_12)+(TOTAL_DATAUSE_HOUR_13)+(TOTAL_DATAUSE_HOUR_14)+(TOTAL_DATAUSE_HOUR_15)) AS day_MB
		,((TOTAL_DATAUSE_HOUR_16)+(TOTAL_DATAUSE_HOUR_17)+(TOTAL_DATAUSE_HOUR_18)) AS erh_MB
		,((TOTAL_DATAUSE_HOUR_19)+(TOTAL_DATAUSE_HOUR_20)+(TOTAL_DATAUSE_HOUR_21)+(TOTAL_DATAUSE_HOUR_22)+(TOTAL_DATAUSE_HOUR_23)+(TOTAL_DATAUSE_HOUR_0)) AS eve_MB
		,((TOTAL_DATAUSE_HOUR_1)+(TOTAL_DATAUSE_HOUR_2)+(TOTAL_DATAUSE_HOUR_3)+(TOTAL_DATAUSE_HOUR_4)+(TOTAL_DATAUSE_HOUR_5)) AS nt_MB
		,((TOTAL_DATAUSE_HOUR_0_WKND)+(TOTAL_DATAUSE_HOUR_1_WKND)+(TOTAL_DATAUSE_HOUR_2_WKND)+(TOTAL_DATAUSE_HOUR_3_WKND)+(TOTAL_DATAUSE_HOUR_4_WKND)+(TOTAL_DATAUSE_HOUR_5_WKND)+(TOTAL_DATAUSE_HOUR_6_WKND)+(TOTAL_DATAUSE_HOUR_7_WKND)+(TOTAL_DATAUSE_HOUR_8_WKND)+(TOTAL_DATAUSE_HOUR_9_WKND)+(TOTAL_DATAUSE_HOUR_10_WKND)+(TOTAL_DATAUSE_HOUR_11_WKND)+(TOTAL_DATAUSE_HOUR_12_WKND)+(TOTAL_DATAUSE_HOUR_13_WKND)+(TOTAL_DATAUSE_HOUR_14_WKND)+(TOTAL_DATAUSE_HOUR_15_WKND)+(TOTAL_DATAUSE_HOUR_16_WKND)+(TOTAL_DATAUSE_HOUR_17_WKND)+(TOTAL_DATAUSE_HOUR_18_WKND)+(TOTAL_DATAUSE_HOUR_19_WKND)+(TOTAL_DATAUSE_HOUR_20_WKND)+(TOTAL_DATAUSE_HOUR_21_WKND)+(TOTAL_DATAUSE_HOUR_22_WKND)+(TOTAL_DATAUSE_HOUR_23_WKND)) as weekend_use
from 	RuAnly.NETWORK_DATA_USAGE_MBB		
where 	charge_year_month = 201510;
Quit;
/*NOTE: PROCEDURE SQL used (Total process time):*/
/*      real time           6:28.94*/
/*      cpu time            3:33.16*/


Proc SQL _method _tree BUFFERSIZE=1000000;
Create table test as
select 	billing_account_number
		,((total_ul_volume)+(total_dl_volume)) AS MBs
		,((TOTAL_DATAUSE_HOUR_6)+(TOTAL_DATAUSE_HOUR_7)+(TOTAL_DATAUSE_HOUR_8)+(TOTAL_DATAUSE_HOUR_9)) AS mrh_MB
		,((TOTAL_DATAUSE_HOUR_10)+(TOTAL_DATAUSE_HOUR_11)+(TOTAL_DATAUSE_HOUR_12)+(TOTAL_DATAUSE_HOUR_13)+(TOTAL_DATAUSE_HOUR_14)+(TOTAL_DATAUSE_HOUR_15)) AS day_MB
		,((TOTAL_DATAUSE_HOUR_16)+(TOTAL_DATAUSE_HOUR_17)+(TOTAL_DATAUSE_HOUR_18)) AS erh_MB
		,((TOTAL_DATAUSE_HOUR_19)+(TOTAL_DATAUSE_HOUR_20)+(TOTAL_DATAUSE_HOUR_21)+(TOTAL_DATAUSE_HOUR_22)+(TOTAL_DATAUSE_HOUR_23)+(TOTAL_DATAUSE_HOUR_0)) AS eve_MB
		,((TOTAL_DATAUSE_HOUR_1)+(TOTAL_DATAUSE_HOUR_2)+(TOTAL_DATAUSE_HOUR_3)+(TOTAL_DATAUSE_HOUR_4)+(TOTAL_DATAUSE_HOUR_5)) AS nt_MB
		,((TOTAL_DATAUSE_HOUR_0_WKND)+(TOTAL_DATAUSE_HOUR_1_WKND)+(TOTAL_DATAUSE_HOUR_2_WKND)+(TOTAL_DATAUSE_HOUR_3_WKND)+(TOTAL_DATAUSE_HOUR_4_WKND)+(TOTAL_DATAUSE_HOUR_5_WKND)+(TOTAL_DATAUSE_HOUR_6_WKND)+(TOTAL_DATAUSE_HOUR_7_WKND)+(TOTAL_DATAUSE_HOUR_8_WKND)+(TOTAL_DATAUSE_HOUR_9_WKND)+(TOTAL_DATAUSE_HOUR_10_WKND)+(TOTAL_DATAUSE_HOUR_11_WKND)+(TOTAL_DATAUSE_HOUR_12_WKND)+(TOTAL_DATAUSE_HOUR_13_WKND)+(TOTAL_DATAUSE_HOUR_14_WKND)+(TOTAL_DATAUSE_HOUR_15_WKND)+(TOTAL_DATAUSE_HOUR_16_WKND)+(TOTAL_DATAUSE_HOUR_17_WKND)+(TOTAL_DATAUSE_HOUR_18_WKND)+(TOTAL_DATAUSE_HOUR_19_WKND)+(TOTAL_DATAUSE_HOUR_20_WKND)+(TOTAL_DATAUSE_HOUR_21_WKND)+(TOTAL_DATAUSE_HOUR_22_WKND)+(TOTAL_DATAUSE_HOUR_23_WKND)) as weekend_use
from 	RuAnly.NETWORK_DATA_USAGE_MBB		
where 	charge_year_month = 201510;
Quit;
/*NOTE: PROCEDURE SQL used (Total process time):*/
/*      real time           6:50.14*/
/*      cpu time            3:27.99*/





libname RuAnly meta library = "RuAnly" metaout = data READBUFF = 10000; 












Proc SQL;
Connect to DB2(user=lmurphy password=welcome123 Database=BDWLP01);
Create table rosie_test as

Select * 
From Connection to db2(

SELECT 
billing_account_number
,MBs
,mrh_MB
,day_MB
,erh_MB
,eve_MB
,nt_MB
,weekend_use
,video_stream
,audio_stream
,browsing
,facebook
,twitter
,message_col
,file_sharing
,youtube
,tethering
,days_used

FROM

( 
	Select * from (
		select 	a.billing_account_number
				,FLOAT((a.total_ul_volume)+(a.total_dl_volume)) AS MBs
				,FLOAT((a.TOTAL_DATAUSE_HOUR_6)+(a.TOTAL_DATAUSE_HOUR_7)+(a.TOTAL_DATAUSE_HOUR_8)+(a.TOTAL_DATAUSE_HOUR_9)) AS mrh_MB
				,FLOAT((a.TOTAL_DATAUSE_HOUR_10)+(a.TOTAL_DATAUSE_HOUR_11)+(a.TOTAL_DATAUSE_HOUR_12)+(a.TOTAL_DATAUSE_HOUR_13)+(a.TOTAL_DATAUSE_HOUR_14)+(a.TOTAL_DATAUSE_HOUR_15)) AS day_MB
				,FLOAT((a.TOTAL_DATAUSE_HOUR_16)+(a.TOTAL_DATAUSE_HOUR_17)+(a.TOTAL_DATAUSE_HOUR_18)) AS erh_MB
				,FLOAT((a.TOTAL_DATAUSE_HOUR_19)+(a.TOTAL_DATAUSE_HOUR_20)+(a.TOTAL_DATAUSE_HOUR_21)+(a.TOTAL_DATAUSE_HOUR_22)+(a.TOTAL_DATAUSE_HOUR_23)+(a.TOTAL_DATAUSE_HOUR_0)) AS eve_MB
				,FLOAT((a.TOTAL_DATAUSE_HOUR_1)+(a.TOTAL_DATAUSE_HOUR_2)+(a.TOTAL_DATAUSE_HOUR_3)+(a.TOTAL_DATAUSE_HOUR_4)+(a.TOTAL_DATAUSE_HOUR_5)) AS nt_MB
				,FLOAT((a.TOTAL_DATAUSE_HOUR_0_WKND)+(a.TOTAL_DATAUSE_HOUR_1_WKND)+(a.TOTAL_DATAUSE_HOUR_2_WKND)+(a.TOTAL_DATAUSE_HOUR_3_WKND)+(a.TOTAL_DATAUSE_HOUR_4_WKND)+(a.TOTAL_DATAUSE_HOUR_5_WKND)+(a.TOTAL_DATAUSE_HOUR_6_WKND)+(a.TOTAL_DATAUSE_HOUR_7_WKND)+(a.TOTAL_DATAUSE_HOUR_8_WKND)+(a.TOTAL_DATAUSE_HOUR_9_WKND)+(a.TOTAL_DATAUSE_HOUR_10_WKND)+(a.TOTAL_DATAUSE_HOUR_11_WKND)+(a.TOTAL_DATAUSE_HOUR_12_WKND)+(a.TOTAL_DATAUSE_HOUR_13_WKND)+(a.TOTAL_DATAUSE_HOUR_14_WKND)+(a.TOTAL_DATAUSE_HOUR_15_WKND)+(a.TOTAL_DATAUSE_HOUR_16_WKND)+(a.TOTAL_DATAUSE_HOUR_17_WKND)+(a.TOTAL_DATAUSE_HOUR_18_WKND)+(a.TOTAL_DATAUSE_HOUR_19_WKND)+(a.TOTAL_DATAUSE_HOUR_20_WKND)+(a.TOTAL_DATAUSE_HOUR_21_WKND)+(a.TOTAL_DATAUSE_HOUR_22_WKND)+(a.TOTAL_DATAUSE_HOUR_23_WKND)) as weekend_use
				,b.mbs_video_streaming_total as video_stream
				,b.mbs_audio_streaming_total as audio_stream
				,b.mbs_web_browsing_total as browsing
				,b.mbs_facebook_total as facebook
				,b.mbs_twitter_total as twitter
				,b.mbs_messaging_and_collaboration_total as message_col
				,b.mbs_file_sharing_total as file_sharing
				,b.mbs_youtube_total as youtube
				,b.mbs_tethering_total as tethering
	
			from 	DM_ANALYTICS_SOD_UK.NETWORK_DATA_USAGE_MBB as a,
					DM_ANALYTICS_SOD_UK.NETWORK_PROCERA as b
					
		where 	a.billing_account_number = b.billing_account_number
			AND a.charge_year_month = '201510'   
			AND b.YEAR_MONTH = '201510'
			) as a,
			
	(select	billing_account_number as ban
			,count(billing_account_number) as days_used
		from DM_ANALYTICS_SOD_UK.DAILY_OUTGOING_USAGE_HISTORY
		where CHARGE_DATE >= '01/10/2015'
			AND CHARGE_DATE <= '31/10/2015'
			AND TOTAL_AMOUNT_OF_DATA > 1
			group by billing_account_number)
			 as b
			
	where 	a.billing_account_number = b.ban
)
);

%PUT &SQLXRC &SQLXMSG
Disconnect from DB2;
Quit;
